<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!-- Loading shared library : /afs/cern.ch/work/j/jaklamka/ILDTracking/LLPRefitProcessor/lib/libLLPRefitProcessor.so.2.11.0 (libLLPRefitProcessor.so)-->

<!--##########################################
    #                                        #
    #     Example steering file for marlin   #
    #                                        #
    ##########################################-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
 <constants>
    <!-- ***** Global constant for reconstruction ***** -->
    <!-- The lcgeo directory where to look for the ILD model -->
    <constant name="lcgeo_DIR" value="/path/to/lcgeo_DIR" />
    <!-- ILD detector model -->
    <constant name="DetectorModel" value="None_Please_specify_one" />
    <!-- The full compact file name -->
    <constant name="CompactFile" value="${lcgeo_DIR}/ILD/compact/${DetectorModel}/${DetectorModel}.xml" />
    <!-- ILD calibration file -->
    <constant name="CalibrationFile" value="Calibration/Calibration_${DetectorModel}.xml" />
 </constants>

 <execute>
  <!--processor name="MyEventSelector"/--> 
  <!--if condition="MyEventSelector"-->    
   <processor name="MyAIDAProcessor"/>
   <processor name="InitDD4hep" />
   <processor name="MyStatusmonitor" />
   
   <processor name="MyLLPRefitProcessor"/>  
   <processor name="MyLCIOOutputProcessor"/>  
  <!--/if-->                                 
 </execute>

 <global>
  <parameter name="LCIOInputFiles"> simjob.slcio </parameter>
  <!-- limit the number of processed records (run+evt): -->  
  <parameter name="MaxRecordNumber" value="5001" />  
  <parameter name="SkipNEvents" value="0" />  
  <parameter name="SupressCheck" value="false" />  
  <parameter name="AllowToModifyEvent" value="false" />  
  <parameter name="GearXMLFile"></parameter>  
  <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> DEBUG  </parameter> 
  <parameter name="RandomSeed" value="1234567890" />
  <!-- optionally limit the collections that are read from the input file: -->  
  <!--parameter name="LCIOReadCollectionNames">MCParticle PandoraPFOs</parameter-->
 </global>
 
 <processor name="MyLLPRefitProcessor" type="LLPRefitProcessor">
 <!--LLPRefitProcessor refits an input track collection, producing a new collection of tracks.-->
  <!--Use Energy Loss in Fit-->
  <parameter name="EnergyLossOn" type="bool">true </parameter>
  <!--Fit direction: -1: backward [default], +1: forward-->
  <parameter name="FitDirection" type="int">-1 </parameter>
  <!--Value used for the initial d0 variance of the trackfit-->
  <parameter name="InitialTrackErrorD0" type="float">1e+06 </parameter>
  <!--Value used for the initial omega variance of the trackfit-->
  <parameter name="InitialTrackErrorOmega" type="float">0.0001 </parameter>
  <!--Value used for the initial phi0 variance of the trackfit-->
  <parameter name="InitialTrackErrorPhi0" type="float">100 </parameter>
  <!--Value used for the initial tanL variance of the trackfit-->
  <parameter name="InitialTrackErrorTanL" type="float">100 </parameter>
  <!--Value used for the initial z0 variance of the trackfit-->
  <parameter name="InitialTrackErrorZ0" type="float">1e+06 </parameter>
  <!--TrackState to use for initialization of the fit: -1: refit from hits [default], 1: AtIP, 2: AtFirstHit, 3: AtLastHit, 4:AtCalo-->
  <parameter name="InitialTrackState" type="int">-1 </parameter>
  <!--Name of the input track collection-->
  <parameter name="InputTrackCollectionName" type="string" lcioInType="Track">TruthTracks </parameter>
  <!--Name of the MCParticle-Track Relations collection for input tracks-->
  <parameter name="InputTrackRelCollection" type="string" lcioInType="LCRelation">TruthTracksMCP </parameter>
  <!--Maximum Chi-squared value allowed when assigning a hit to a track-->
  <parameter name="MaxChi2PerHit" type="float">100 </parameter>
  <!--Use MultipleScattering in Fit-->
  <parameter name="MultipleScatteringOn" type="bool">true </parameter>
  <!--Name of the output track collection-->
  <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track">RefittedTracks </parameter>
  <!--Name of the MCParticle-Track Relations collection for output tracks-->
  <parameter name="OutputTrackRelCollection" type="string" lcioOutType="LCRelation">RefittedTracksMCP </parameter>
  <!--particle mass that is used in the fit - default is the pion mass: 0.13957018 )-->
  <parameter name="ParticleMass" type="double">0.13957 </parameter>
  <!--Smooth All Mesurement Sites in Fit-->
  <parameter name="SmoothOn" type="bool">false </parameter>
  <!--Name of the track fitting system to be used (KalTest, DDKalTest, aidaTT, ... )-->
  <parameter name="TrackSystemName" type="string">DDKalTest </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">DEBUG </parameter>
</processor>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int">1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string">aida_file </parameter>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string">root </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 
 <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--The ZLIB compression level on writing. Set it to 0 for no compression-->
  <!--parameter name="CompressionLevel" type="int">6 </parameter-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec">MCParticlesSkimmed  </parameter-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec">MyPreciousSimTrackerHits  </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string">outputfile.slcio </parameter>
  <!--write mode for output file:  WRITE_APPEND, WRITE_NEW or None-->
  <parameter name="LCIOWriteMode" type="string">WRITE_NEW </parameter>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

<processor name="InitDD4hep" type="InitializeDD4hep">
    <!--InitializeDD4hep reads a compact xml file and initializes the DD4hep::LCDD object-->
    <!--Name of the DD4hep compact xml file to load-->
    <parameter name="DD4hepXMLFile" type="string"> ${CompactFile} </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">SILENT </parameter>
</processor>

 <processor name="MyMemoryMonitor" type="MemoryMonitor">
 <!--Simple processor to print out the memory consumption at defined intervals-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Print Event Number Every N Events-->
  <parameter name="howOften" type="int">1 </parameter>
</processor>

 <processor name="MyStatusmonitor" type="Statusmonitor">
 <!--Statusmonitor prints out information on running Marlin Job: Prints number of runs run and current number of the event. Counting is sequential and not the run or event ID.-->
  <!--Print the event number every N events-->
  <parameter name="HowOften" type="int">10000 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


</marlin>
